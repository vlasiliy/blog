<?php

/**
 * BaseComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $post_id
 * @property integer $sf_guard_user_id
 * @property string $text
 * @property Post $Post
 * @property sfGuardUser $sfGuardUser
 * 
 * @method integer     getPostId()           Returns the current record's "post_id" value
 * @method integer     getSfGuardUserId()    Returns the current record's "sf_guard_user_id" value
 * @method string      getText()             Returns the current record's "text" value
 * @method Post        getPost()             Returns the current record's "Post" value
 * @method sfGuardUser getSfGuardUser()      Returns the current record's "sfGuardUser" value
 * @method Comment     setPostId()           Sets the current record's "post_id" value
 * @method Comment     setSfGuardUserId()    Sets the current record's "sf_guard_user_id" value
 * @method Comment     setText()             Sets the current record's "text" value
 * @method Comment     setPost()             Sets the current record's "Post" value
 * @method Comment     setSfGuardUser()      Sets the current record's "sfGuardUser" value
 * 
 * @package    blog
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseComment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('comment');
        $this->hasColumn('post_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('sf_guard_user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('text', 'string', 1024, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 1024,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Post', array(
             'local' => 'post_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser', array(
             'local' => 'sf_guard_user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}